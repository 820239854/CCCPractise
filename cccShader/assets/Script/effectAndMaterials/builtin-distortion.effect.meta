{
  "ver": "1.0.15",
  "uuid": "e3bbfa05-d567-4b95-a979-bad7ddf8966d",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\n  precision highp float;\n  attribute vec3 a_position;\n  uniform mat4 cc_matViewProj;\n  attribute  vec2 a_uv0;\n  varying vec2 u_uv;\n  void main()\n  {\n      gl_Position = cc_matViewProj *vec4(a_position, 1);\n      u_uv = a_uv0;\n  }\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\nprecision mediump float;\nuniform sampler2D texture;\n\nuniform float u_time;\nuniform float u_distortion;\nuniform float u_distortion2;\nuniform float u_speed;\nuniform float u_rollspeed;\nvarying vec2 u_uv;\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n\treturn x - floor(x * (1.0 / 289.0)) * 289.0;\n}\nvec3 permute(vec3 x) {\n\t\treturn mod289(((x*34.0)+1.0)*x);\n}\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187,  \n                        0.366025403784439,  \n                      -0.577350269189626,  \n                        0.024390243902439); \n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n  i = mod289(i); \n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nvoid main(){\n    vec2 p = u_uv;\n\t\tfloat ty =   u_time*u_speed;\n\t\tfloat yt = p.y - ty; \n    float offset = snoise(vec2(yt*3.0,0.0))*0.2;\n\t\toffset = offset*u_distortion * offset*u_distortion * offset;\n\t\toffset += snoise(vec2(yt*50.0,0.0))*u_distortion2*0.001;\n\t\tgl_FragColor = texture2D(texture,  vec2(fract(p.x + offset),fract(p.y-  u_time*u_rollspeed) ));\n    \n}\n\n\n"
    }
  ],
  "subMetas": {}
}