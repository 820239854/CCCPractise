//抖音色
%{
  techniques: [
    {
      passes: [
        {
          vert: vs
          frag: fs
          cullMode: none
          blend: true
        }
      ]
      layer: 0
    }
  ]
  properties: {
    texture: {
      type: sampler2D
      value: null
    }
     u_buffer: {
      type: sampler2D
      value: null
    }
     u_noise: {
      type: sampler2D
      value: null
    }
  }
%}

%% vs {
  precision highp float;
  attribute vec3 a_position;
  uniform mat4 cc_matViewProj;
  attribute mediump vec2 a_uv0;
	varying mediump vec2 v_uv0;
  varying vec4 v_color;
  


  void main()
  {
      gl_Position = cc_matViewProj *vec4(a_position, 1);

      v_uv0 = a_uv0;
  }
}

%% fs {

precision highp float;
uniform sampler2D texture;
uniform lowp vec2 u_touch;
varying mediump vec2 v_uv0;

  uniform sampler2D u_buffer;
  
  uniform vec2 u_resolution;
 

  #define PI 3.141592653589793
  #define TAU 6.283185307179586

  const float delta = .005;

  void main() {
    // vec2 uv = (gl_FragCoord.xy - 0.5 * u_resolution.xy) / min(u_resolution.y, u_resolution.x);
    vec2 sample = v_uv0.xy / vec2(640,640);
    float ratio = 1.;
    vec2 mouse = u_touch.xy - v_uv0;
    
    vec4 fragcolour = texture2D(u_buffer, sample);

    float shade = smoothstep(.08 + abs(sin(1.*10.) * .006), .0, length(mouse));
    vec4 texcol = fragcolour;

    float d = shade*2.;

    fragcolour = vec4(d, texcol.x, 0, 1.);

   

    gl_FragColor = fragcolour ;
  }
}
